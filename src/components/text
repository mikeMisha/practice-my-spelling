import React, { useState, useEffect, useRef } from "react";
import { motion, AnimatePresence  } from 'framer-motion';
import NumTracker from "./NumTracker";
import TypingInput from "./TypingInput";
import CurrentWord from "./CurrentWord";
import RepCounter from './RepCounter';
import { connect } from "react-redux";
import { setNextWordIndex, setCurrentRep, setSpellInput } from "../actions";

const SpellingContainer = (props) => {
    const {wordList,wordIndex,setNextWordIndex,setCurrentRep, userInput , currentRep, selectedReps, setSpellInput, isShuffleMode,CreateShuffleList} = props;
    var isCorrect =  (userInput===wordList[wordIndex])
    const showContainer = {
        hidden:{
            y:'-100vh',
            opacity:0,
        },
        visible:{
            y: '0',
            opacity:1
        },
        exit: {
            y: "100vh",
            opacity: 0
        }
    }
    
    useEffect(()=>{
        setCurrentRep(selectedReps)
    },[])

    useEffect(()=>{
        if(isCorrect){
        
            if(selectedReps==='infinity'){
                setSpellInput('')
                return;
            }
            
            if(currentRep===1 || selectedReps==1){
                setNextWordIndex()
                setSpellInput('')
                setCurrentRep(selectedReps)
            }else{
                setCurrentRep( currentRep - 1 )
                setSpellInput('')
            }
        } 
    },[isCorrect])
    

   
  
   

      return  wordList.length!==0 &&(
        <AnimatePresence initial={false} exitBeforeEnter={true}>
            <motion.div variants={showContainer} hidden="hidden" animate="visible" exit="exit" className={`d-flex flex-column align-items-center`}>
            <div >
                <RepCounter />
            </div>
            <div className="mt-4">
                <CurrentWord />
            </div>
            <div className="mb-3">
                <NumTracker current={ wordIndex + 1} total={wordList.length}/>
            </div>
            <div className="my-3">
                <TypingInput />
            </div>
            </motion.div>
        </AnimatePresence>
           
        ) 
    
      
    
}

const mapStateToProps = (state) => {
    return {
        wordList: state.session.currentWordList.list,
        wordIndex:state.session.currentWordIndex,
        userInput:state.session.userTextInput,
        selectedReps: state.userAppSettings.reps,
        currentRep: state.session.currentRep,
        isShuffleMode: state.userAppSettings.isShuffleMode
    }
}

export default connect(mapStateToProps,{setNextWordIndex, setCurrentRep, setSpellInput})(SpellingContainer);